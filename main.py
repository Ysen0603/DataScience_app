import streamlit as st
from PG import data_loading, data_exploration, data_preprocessing, data_grouping, model_training, model_saving

def main():
    st.set_page_config(
        page_title="Analyse de donn√©es et ML",
        page_icon="üìä",
        layout="wide",
        initial_sidebar_state="expanded"
    )

    # Styles CSS personnalis√©s
    st.markdown("""
    <style>
    .main .block-container {
        padding-top: 2rem;
        padding-bottom: 2rem;
    }
    .sidebar .sidebar-content {
        background-color: #f0f2f6;
    }
    h1 {
        color: #4CAF66;
        font-size: 2.5rem;
        font-weight: bold;
        margin-bottom: 2rem;
    }
    .stSelectbox label {
        font-weight: bold;
        color: #31333F;
    }
    </style>
    """, unsafe_allow_html=True)

    st.title("Analyse de donn√©es et apprentissage automatique")

    # Menu de navigation avec ic√¥nes
    menu = {
        "Chargement des donn√©es": "üì•",
        "Exploration des donn√©es": "üîç",
        "Pr√©traitement": "üõ†Ô∏è",
        "Groupement": "üîó",
        "Entra√Ænement du mod√®le": "ü§ñ",
        "Sauvegarde du mod√®le": "üíæ"
    }
    choice = st.sidebar.selectbox(
        "Navigation",
        list(menu.keys()),
        format_func=lambda x: f"{menu[x]} {x}"
    )

    # Ajoutez une s√©paration visuelle
    st.sidebar.markdown("---")

    # Informations sur l'application
    st.sidebar.info("Cette application permet d'analyser des donn√©es et d'entra√Æner des mod√®les de machine learning.")

    # Barre de progression
    progress_mapping = {
        "Chargement des donn√©es": 1,
        "Exploration des donn√©es": 2,
        "Pr√©traitement": 3,
        "Groupement": 4,
        "Entra√Ænement du mod√®le": 5,
        "Sauvegarde du mod√®le": 6
    }
    progress = st.progress(0)
    progress.progress(progress_mapping[choice] / len(menu))

    # Initialisation de l'√©tat de session
    if 'data' not in st.session_state:
        st.session_state.data = None
    if 'model' not in st.session_state:
        st.session_state.model = None

    # Navigation avec gestion d'√©tat
    if choice == "Chargement des donn√©es":
        data_loading.load_data()
    elif choice == "Exploration des donn√©es":
        if st.session_state.data is not None:
            data_exploration.explore_data()
        else:
            st.warning("Veuillez d'abord charger des donn√©es.")
    elif choice == "Pr√©traitement":
        if st.session_state.data is not None:
            data_preprocessing.preprocess_data()
        else:
            st.warning("Veuillez d'abord charger des donn√©es.")
    elif choice == "Groupement":
        if st.session_state.data is not None:
            data_grouping.group_data()
        else:
            st.warning("Veuillez d'abord charger des donn√©es.")
    elif choice == "Entra√Ænement du mod√®le":
        if st.session_state.data is not None:
            model_training.train_model_page()
        else:
            st.warning("Veuillez d'abord charger et pr√©traiter les donn√©es.")
    elif choice == "Sauvegarde du mod√®le":
        if st.session_state.model is not None:
            model_saving.save_load_model()
        else:
            st.warning("Veuillez d'abord entra√Æner un mod√®le.")

    # Pied de page
    st.markdown("---")
    st.markdown("D√©velopp√© avec ‚ù§Ô∏è par Ennaya Yassine")

if __name__ == "__main__":
    main()